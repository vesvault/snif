#!/bin/sh

#/**************************************************************************
# *     _________
# *    /````````_\                  S N I F ~ e2e TLS trust for IoT
# *   /\     , / O\      ___
# *  | |     | \__|_____/  o\       e2e TLS SNI Forwarder
# *  | |     |  ``/`````\___/       e2e TLS CA Proxy
# *  | |     | . | <"""""""~~
# *  |  \___/ ``  \________/        https://snif.host
# *   \  '''  ``` /````````         (C) 2021 VESvault Corp
# *    \_________/                  Jim Zubov <jz@vesvault.com>
# *
# *
# * GNU General Public License v3
# * You may opt to use, copy, modify, merge, publish, distribute and/or sell
# * copies of the Software, and permit persons to whom the Software is
# * furnished to do so, under the terms of the COPYING file.
# *
# * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
# * KIND, either express or implied.
# *
# **************************************************************************/

. /etc/snif/snif.conf

if [ -e ${SNIF_CONN_CRT} ]
then
    [ -w ${SNIF_CONN_CRT} -o "x$1" = "x-q" ] || echo Warning: SNIF cert ${SNIF_CONN_CRT} is not writable for ${USER}, a renewed cert will not be saved by this process >&2
elif [ ! -d ${SNIF_CONN_DIR} ]
then
    echo Error: SNIF dir ${SNIF_CONN_DIR} does not exist >&2
    exit 1
elif [ ! -O ${SNIF_CONN_DIR} ]
then
    echo Wrong uid for cert file creation, trying sudo... >&2
    [ "x${SNIF_USER}" = "x" ] && SNIF_USER=`stat -c %U ${SNIF_CONN_DIR}`
    exec sudo -u ${SNIF_USER} "$0" "$@"
    echo ... failed, exitcode=$? >&2
    exit 1
fi

SNIF_ARGS="-c ${SNIF_CONN_CRT} -k ${SNIF_CONN_KEY} -a ${SNIF_CONN_INITURL}"

if [ "${SNIF_CONN_HOSTNAME}" ]
then
    SNIF_ARGS="${SNIF_ARGS} -r ${SNIF_CONN_HOSTNAME}"
elif [ "${SNIF_CONN_HOSTNAME_PORTABLE}" -a "${SNIF_CONN_HOSTNAME_PORTABLE}" != "0" ]
then
    SNIF_ARGS="${SNIF_ARGS} -P"
fi

if [ "x$1" = "x-d" ]
then
    SNIF_ARGS="${SNIF_ARGS} -d"
    for p in ${SNIF_CONN_PORTS}
    do
	[ "x$p" != "x" ] && SNIF_ARGS="${SNIF_ARGS} $p"
    done
elif [ "x$1" != "x-q" ]
then
    echo "(Use $0 -d to run the SNIF Connector daemon, -q to silence notices)"
    echo "Allocated hostname for this SNIF connector:"
fi

SNIF_BIN=`dirname $0`/snifd
[ ! -x ${SNIF_BIN} ] && SNIF_BIN=snifd
umask 0027
exec ${SNIF_BIN} ${SNIF_ARGS}
